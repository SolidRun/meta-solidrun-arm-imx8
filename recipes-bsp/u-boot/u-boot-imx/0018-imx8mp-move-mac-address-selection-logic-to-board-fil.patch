From 8785a0e510cd75d4a29311c7869ff5ac947d67a9 Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Sun, 3 Apr 2022 13:29:30 +0300
Subject: [PATCH] imx8mp: move mac-address selection logic to board-file

Make mac address selection explicit in the board-file to allow full
control over selection priority if multiple locations may contain MACs.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 arch/arm/include/asm/mach-imx/sys_proto.h     |  1 +
 .../imx8mp_solidrun/imx8mp_solidrun.c         | 24 +++++++++++++++++++
 drivers/net/dwc_eth_qos.c                     |  6 ++++-
 drivers/net/fec_mxc.c                         |  8 +++++--
 4 files changed, 36 insertions(+), 3 deletions(-)

diff --git a/arch/arm/include/asm/mach-imx/sys_proto.h b/arch/arm/include/asm/mach-imx/sys_proto.h
index dc589e03cec..8f801ed26bd 100644
--- a/arch/arm/include/asm/mach-imx/sys_proto.h
+++ b/arch/arm/include/asm/mach-imx/sys_proto.h
@@ -347,6 +347,7 @@ unsigned long call_imx_sip_ret2(unsigned long id, unsigned long reg0,
 				unsigned long reg3);
 
 void imx_get_mac_from_fuse(int dev_id, unsigned char *mac);
+int board_get_mac(int dev_id, unsigned char *mac);
 
 #if defined(CONFIG_MX6) || defined(CONFIG_MX7) || defined(CONFIG_MX7ULP)
 void enable_ca7_smp(void);
diff --git a/board/solidrun/imx8mp_solidrun/imx8mp_solidrun.c b/board/solidrun/imx8mp_solidrun/imx8mp_solidrun.c
index 0f71a4beaad..e2bd8fc7523 100644
--- a/board/solidrun/imx8mp_solidrun/imx8mp_solidrun.c
+++ b/board/solidrun/imx8mp_solidrun/imx8mp_solidrun.c
@@ -549,6 +549,30 @@ int board_late_init(void)
 	return 0;
 }
 
+/*
+ * select board mac address for given interface
+ */
+int board_get_mac(int dev_id, unsigned char *mac) {
+	char macenv[16] = {0};
+	mac[0] = 0;
+
+	/*
+	 * Note: Environment ethaddr (eth1addr, eth2addr, ...) has first priority,
+	 * therefore it should be read and returned here.
+	 * However the fec driver will write the result from this function to the environment,
+	 * causing a feedback loop.
+	 */
+
+	// fuses
+	imx_get_mac_from_fuse(dev_id, mac);
+	if(is_valid_ethaddr(mac)) {
+		printf("%s: interface %i: using mac from fuses: %02X:%02X:%02X:%02X:%02X:%02X\n", __func__, dev_id, mac[0], mac[1], mac[2], mac[3], mac[4], mac[5]);
+		return 0;
+	}
+
+	return -ENOENT;
+}
+
 #ifdef CONFIG_ANDROID_SUPPORT
 bool is_power_key_pressed(void) {
 	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
diff --git a/drivers/net/dwc_eth_qos.c b/drivers/net/dwc_eth_qos.c
index 8a65017f668..825d3529731 100644
--- a/drivers/net/dwc_eth_qos.c
+++ b/drivers/net/dwc_eth_qos.c
@@ -714,7 +714,11 @@ static int eqos_read_rom_hwaddr(struct udevice *dev)
 	struct eqos_priv *eqos = dev_get_priv(dev);
 	int ret;
 
-	ret = eqos->config->ops->eqos_get_enetaddr(dev);
+	// TODO: this may not be correct anymore since
+	// patch 0018-imx8mp-move-mac-address-selection-logic-to-board-fil.patch did not cleanly apply here
+	// NOTE: .eqos_get_enetaddr = eqos_null_ops in structs below
+	ret = board_get_mac(dev_seq(dev), pdata->enetaddr);
+	// ret = eqos->config->ops->eqos_get_enetaddr(dev);
 	if (ret < 0)
 		return ret;
 
diff --git a/drivers/net/fec_mxc.c b/drivers/net/fec_mxc.c
index 8a866ca8b79..f2681a2e5c9 100644
--- a/drivers/net/fec_mxc.c
+++ b/drivers/net/fec_mxc.c
@@ -396,7 +396,7 @@ static void fec_rbd_clean(int last, struct fec_bd *prbd)
 
 static int fec_get_hwaddr(int dev_id, unsigned char *mac)
 {
-	imx_get_mac_from_fuse(dev_id, mac);
+	board_get_mac(dev_id, mac);
 	return !is_valid_ethaddr(mac);
 }
 
@@ -1103,7 +1103,11 @@ static int fecmxc_read_rom_hwaddr(struct udevice *dev)
 	struct fec_priv *priv = dev_get_priv(dev);
 	struct eth_pdata *pdata = dev_get_plat(dev);
 
-	return fec_get_hwaddr(priv->dev_id, pdata->enetaddr);
+	int ret = fec_get_hwaddr(priv->dev_id, pdata->enetaddr);
+	if (ret == 0)
+		debug("got MAC%d address from board-file: %pM\n", priv->dev_id, pdata->enetaddr);
+
+	return ret;
 }
 
 static int fecmxc_set_promisc(struct udevice *dev, bool enable)
