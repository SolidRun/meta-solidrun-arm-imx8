From 48984f4bf33fb7b2a2eae71e1cbeb96d1afabb8e Mon Sep 17 00:00:00 2001
From: Alvaro-solidrun <alvaro.karsz@solid-run.com>
Date: Wed, 9 Jun 2021 14:24:46 +0300
Subject: [PATCH] Imx8mn: Check if power is connected before booting

---
 .../imx8mn_solidrun/imx8mn_solidrun.c         | 96 +++++++++++++++++++
 configs/imx8mn_solidrun_defconfig             |  2 +-
 2 files changed, 97 insertions(+), 1 deletion(-)

diff --git a/board/solidrun/imx8mn_solidrun/imx8mn_solidrun.c b/board/solidrun/imx8mn_solidrun/imx8mn_solidrun.c
index cec198ee04..ca21425e91 100644
--- a/board/solidrun/imx8mn_solidrun/imx8mn_solidrun.c
+++ b/board/solidrun/imx8mn_solidrun/imx8mn_solidrun.c
@@ -343,3 +343,99 @@ bool is_power_key_pressed(void) {
 	return (bool)(!!(readl(SNVS_HPSR) & (0x1 << 6)));
 }
 #endif
+
+
+
+#ifndef CONFIG_SPL_BUILD
+
+
+/*I/O Expander reset GPIO*/
+#define IO_EXPANDER_RST            IMX_GPIO_NR(3, 16)
+
+
+
+
+/*
+ *function that can be called from U-boot
+ This function will check if power is connected to board.
+ If power is not connected, it will keep checking forever.
+ * */
+int check_power_connection(void) 
+{
+        struct udevice *bus, *i2c_dev = NULL;
+        int ret,
+	    bus_number = 2, /*I/O expander i2c bus*/
+	    io_expander_address = 0x20, /*I/O expander address on bus*/
+	    input_reg_address = 0x0, /*Input values regiser address in I/O expander*/
+	    power_connection_bit_mask = 2, /*the second bit indicates if power is connected*/
+	    echo_message_to_user_flag = 1;
+	/*echo_message_to_user_flag is a flag to indicate if a echo to user is needed in cases when power is not connected - flag is used to make sure the message is echoed just once*/
+        uint8_t i2c_value;
+	
+
+	/*release I/O expander from reset*/	
+	gpio_request( IO_EXPANDER_RST,"IO_EXPANDER_RST");
+	gpio_direction_output(IO_EXPANDER_RST, 1);
+
+	
+	/*get BUS*/	
+        ret = uclass_get_device_by_seq(UCLASS_I2C, bus_number, &bus);
+        if (ret) {
+                printf("Can't find bus %d, Exit Power connection check\n", bus_number);
+                return 0;
+        }
+
+	/*probe bus, check if I/O expander is detected on bus*/
+	ret = dm_i2c_probe(bus, io_expander_address, 0, &i2c_dev);
+
+	/*I/O expander is not connected, exit function*/
+	if (ret) {
+		return 0;
+	}	
+
+	/*keep reading i2c until power connection is detected*/
+	while (1)
+	{
+		ret = dm_i2c_read(i2c_dev, input_reg_address , &i2c_value, 1);
+
+		if (ret) {
+			/*error reading i2c, exit function*/
+	                printf("Can't read I2C, Exit Power connection check\n");
+			return 0;
+		}
+		
+		/*apply mask, only the power connection bit is relevant*/
+		i2c_value &= power_connection_bit_mask; 	
+
+
+
+		if(i2c_value) {
+			/*power connection bit is ON, power connected, exit loop*/
+
+
+			/*
+			 *TODO: WAIT UNTIL CAP IS AT LEAST 92.5% FROM REGULATION POINT BEFORE BOOTING
+			 * THIS CAN BE DONE BY READING THE I/O EXPANDER'S THIRD BIT.
+			 * */
+
+			break;
+		}
+
+		/*power is off, alert user. echo message only in first check (avoid multiple messages)*/
+		if(echo_message_to_user_flag) {
+			printf("PLEASE CONNECT POWER\n");
+			/*turn off the flag, echo was made*/
+			echo_message_to_user_flag = 0;
+		}
+	}	
+
+	/*power is connected*/
+
+
+	/*echo message to user*/
+	printf("POWER IS CONNECTED\n");
+	return 0;
+}
+
+U_BOOT_CMD(check_power_connection,1 ,0, (void *)check_power_connection, "", "");
+#endif
diff --git a/configs/imx8mn_solidrun_defconfig b/configs/imx8mn_solidrun_defconfig
index afea4434a5..fb90cf9922 100644
--- a/configs/imx8mn_solidrun_defconfig
+++ b/configs/imx8mn_solidrun_defconfig
@@ -144,4 +144,4 @@ CONFIG_DISTRO_DEFAULTS=y
 CONFIG_ENV_VARS_UBOOT_CONFIG=y
 CONFIG_USE_BOOTCOMMAND=y
 # CONFIG_BOOTCOMMAND="run distro_bootcmd"
-CONFIG_BOOTCOMMAND="echo 'Enable Can_ClockOut1 (24MHz)';mw 0x30360128 0x1d0 ;mmc dev 1; ls mmc 1:1 boot; load mmc 1:1 ${loadaddr}  boot/Image; load mmc 1:1 ${fdt_addr} boot/imx8mn-compact.dtb; load mmc 1:1 ${initrd_addr} boot/rootfs.cpio; booti ${loadaddr} ${initrd_addr} ${fdt_addr}"
+CONFIG_BOOTCOMMAND="check_power_connection; echo 'Enable Can_ClockOut1 (24MHz)';mw 0x30360128 0x1d0 ;mmc dev 1; ls mmc 1:1 boot; load mmc 1:1 ${loadaddr}  boot/Image; load mmc 1:1 ${fdt_addr} boot/imx8mn-compact.dtb; load mmc 1:1 ${initrd_addr} boot/rootfs.cpio; booti ${loadaddr} ${initrd_addr} ${fdt_addr}"
-- 
2.25.1

