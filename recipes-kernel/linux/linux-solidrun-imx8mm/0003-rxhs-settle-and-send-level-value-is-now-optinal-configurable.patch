From 0536eeda61742bfd7875f61fa9d6b58ef16ecfc6 Mon Sep 17 00:00:00 2001
From: ssuesens <sebastian.suesens@baslerweb.com>
Date: Wed, 17 Apr 2019 11:11:11 +0200
Subject: [PATCH] rxhs-settle and send-level value is now optinal configurable
 via device-tree

default value for rxhs-settle is 0x09
default value for send-level is 0x40
---
 .../media/platform/imx8/mxc-mipi-csi2_yav.c   | 41 +++++++------------
 .../media/platform/mxc/capture/mx6s_capture.c |  1 -
 2 files changed, 15 insertions(+), 27 deletions(-)

diff --git a/drivers/media/platform/imx8/mxc-mipi-csi2_yav.c b/drivers/media/platform/imx8/mxc-mipi-csi2_yav.c
index bf08d7f66495..c5400d0d8e20 100755
--- a/drivers/media/platform/imx8/mxc-mipi-csi2_yav.c
+++ b/drivers/media/platform/imx8/mxc-mipi-csi2_yav.c
@@ -52,8 +52,6 @@ MODULE_PARM_DESC(debug, "Debug level (0-2)");
 #define	GPR_CSI2_1_S_PRG_RXHS_SETTLE(x)	(((x) & 0x3F) << 2)
 #define	GPR_CSI2_1_RX_RCAL		(3)
 
-static u8 rxhs_settle[2] = { 0x14, 0x9 };
-
 static struct mxc_mipi_csi2_dev *sd_to_mxc_mipi_csi2_dev(struct v4l2_subdev
 							 *sdev)
 {
@@ -347,33 +345,10 @@ static int mipi_csi2_s_stream(struct v4l2_subdev *sd, int enable)
 	return ret;
 }
 
-static int mipi_csi2_set_fmt(struct v4l2_subdev *sd,
-			     struct v4l2_subdev_pad_config *cfg,
-			     struct v4l2_subdev_format *fmt)
-{
-	struct mxc_mipi_csi2_dev *csi2dev = sd_to_mxc_mipi_csi2_dev(sd);
-
-	if (fmt->pad)
-		return -EINVAL;
-
-	if (fmt->format.width * fmt->format.height > 720 * 480) {
-		csi2dev->hs_settle = rxhs_settle[1];
-	} else {
-		csi2dev->hs_settle = rxhs_settle[0];
-	}
-	csi2dev->send_level = 64;
-
-	return 0;
-}
-
 static const struct v4l2_subdev_internal_ops mipi_csi2_sd_internal_ops = {
 	.open = mipi_csi2_open,
 };
 
-static struct v4l2_subdev_pad_ops mipi_csi2_pad_ops = {
-	.set_fmt = mipi_csi2_set_fmt,
-};
-
 static struct v4l2_subdev_core_ops mipi_csi2_core_ops = {
 	.s_power = mipi_csi2_s_power,
 };
@@ -385,7 +360,6 @@ static struct v4l2_subdev_video_ops mipi_csi2_video_ops = {
 static struct v4l2_subdev_ops mipi_csi2_subdev_ops = {
 	.core = &mipi_csi2_core_ops,
 	.video = &mipi_csi2_video_ops,
-	.pad = &mipi_csi2_pad_ops,
 };
 
 static int mipi_csi2_parse_dt(struct mxc_mipi_csi2_dev *csi2dev)
@@ -394,11 +368,20 @@ static int mipi_csi2_parse_dt(struct mxc_mipi_csi2_dev *csi2dev)
 	struct device_node *node = dev->of_node;
 	struct v4l2_fwnode_endpoint endpoint;
 	u32 i;
+	int ret;
 
 	csi2dev->id = of_alias_get_id(node, "csi");
 
 	csi2dev->vchannel = of_property_read_bool(node, "virtual-channel");
 
+	ret = of_property_read_u32(node, "rxhs-settle", &csi2dev->hs_settle);
+	if(ret < 0)
+		csi2dev->hs_settle = 0x09;
+
+	ret = of_property_read_u32(node, "send-level", &csi2dev->send_level);
+	if(ret < 0)
+		csi2dev->send_level = 64;
+
 	node = of_graph_get_next_endpoint(node, NULL);
 	if (!node) {
 		dev_err(dev, "No port node at %s\n", node->full_name);
@@ -499,6 +482,12 @@ static int mipi_csi2_probe(struct platform_device *pdev)
 	if (ret < 0)
 		goto e_v4l_dev;
 
+	dev_info(dev, "rxhs-settle: %d, name: %s\n",
+		 csi2dev->hs_settle, csi2dev->sd.name);
+
+	dev_info(dev, "send-level: %d, name: %s\n",
+		 csi2dev->send_level, csi2dev->sd.name);
+
 	dev_info(&pdev->dev, "lanes: %d, name: %s\n",
 		 csi2dev->num_lanes, csi2dev->sd.name);
 
-- 
2.17.0

