From e196eb4ca815121e60b5bd0b391a96fabb19219a Mon Sep 17 00:00:00 2001
From: Vladimir Oltean <vladimir.oltean@nxp.com>
Date: Wed, 9 Nov 2022 17:25:50 +0200
Subject: [PATCH 200/224] net: dsa: sja1105: read and save the silicon revision

It might happen that different SJA1110 silicon revisions need different
initialization steps. Be prepared for that, by printing the silicon
revision on which the driver has probed.

NXP documentation calls these revisions A0, B0, C0, D0. However I have
found that revisions C0 and D0 have the same VERSION field, so I'm just
printing these as numbers rather than letters, to avoid confusion with
people thinking they have rev D but C gets printed (we could also print
C/D, but that also requires more work).

Signed-off-by: Vladimir Oltean <vladimir.oltean@nxp.com>
---
 drivers/net/dsa/sja1105/sja1105.h      | 1 +
 drivers/net/dsa/sja1105/sja1105_main.c | 7 ++++++-
 2 files changed, 7 insertions(+), 1 deletion(-)

diff --git a/drivers/net/dsa/sja1105/sja1105.h b/drivers/net/dsa/sja1105/sja1105.h
index 9ba2ec2b966d..b1468a0a2149 100644
--- a/drivers/net/dsa/sja1105/sja1105.h
+++ b/drivers/net/dsa/sja1105/sja1105.h
@@ -250,6 +250,7 @@ struct sja1105_private {
 	unsigned long ucast_egress_floods;
 	unsigned long bcast_egress_floods;
 	unsigned long hwts_tx_en;
+	int silicon_rev;
 	const struct sja1105_info *info;
 	size_t max_xfer_len;
 	struct spi_device *spidev;
diff --git a/drivers/net/dsa/sja1105/sja1105_main.c b/drivers/net/dsa/sja1105/sja1105_main.c
index 0c89314006c9..e7f8b16440bf 100644
--- a/drivers/net/dsa/sja1105/sja1105_main.c
+++ b/drivers/net/dsa/sja1105/sja1105_main.c
@@ -3215,6 +3215,7 @@ static int sja1105_check_device_id(struct sja1105_private *priv)
 	const struct of_device_id *match;
 	u32 device_id;
 	u64 part_no;
+	u64 version;
 	int rc;
 
 	rc = sja1105_xfer_u32(priv, SPI_READ, regs->device_id, &device_id,
@@ -3228,6 +3229,9 @@ static int sja1105_check_device_id(struct sja1105_private *priv)
 		return rc;
 
 	sja1105_unpack(prod_id, &part_no, 19, 4, SJA1105_SIZE_DEVICE_ID);
+	sja1105_unpack(prod_id, &version,  3, 0, SJA1105_SIZE_DEVICE_ID);
+
+	priv->silicon_rev = version;
 
 	for (match = sja1105_dt_ids; match->compatible[0]; match++) {
 		const struct sja1105_info *info = match->data;
@@ -3325,7 +3329,8 @@ static int sja1105_probe(struct spi_device *spi)
 		return rc;
 	}
 
-	dev_info(dev, "Probed switch chip: %s\n", priv->info->name);
+	dev_info(dev, "Probed switch chip: %s (rev %d)\n", priv->info->name,
+		 priv->silicon_rev);
 
 	ds = devm_kzalloc(dev, sizeof(*ds), GFP_KERNEL);
 	if (!ds)
-- 
2.43.0

