From 2d00a064025e8a0f45897cc90362a811e1b5081c Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Sun, 28 Apr 2024 14:54:56 +0200
Subject: [PATCH 16/19] Revert "net: rfkill: gpio: add device tree support"

This reverts commit 484b7645c68380fc606947620f3fbd39288b717a.
---
 .../bindings/rfkill/rfkill-gpio.txt           | 25 ------------------
 net/rfkill/rfkill-gpio.c                      | 26 -------------------
 2 files changed, 51 deletions(-)
 delete mode 100644 Documentation/devicetree/bindings/rfkill/rfkill-gpio.txt

diff --git a/Documentation/devicetree/bindings/rfkill/rfkill-gpio.txt b/Documentation/devicetree/bindings/rfkill/rfkill-gpio.txt
deleted file mode 100644
index 44e82a91ce0c..000000000000
--- a/Documentation/devicetree/bindings/rfkill/rfkill-gpio.txt
+++ /dev/null
@@ -1,25 +0,0 @@
-GPIO controlled RFKILL devices
-
-Required properties:
-- compatible	: Must be "rfkill-gpio".
-- rfkill-name	: Name of RFKILL device
-- rfkill-type	: Type of RFKILL device: 1 for WiFi, 2 for BlueTooth, etc.
-		  See include/uapi/linux/rfkill.h for all valid values
-- reset-gpio	: reset-gpio to use
-- shutdown-gpio	: Shutdown gpio to use
-
-At least one gpio needs to be provided. If both are provided, the "reset" GPIO is toggled first.
-
-Optional properties:
-- clocks		: phandle to clock to enable/disable
-
-Example:
-
-	rfkill_bt {
-		compatible = "rfkill-gpio";
-		rfkill-name = "bluetooth";
-		rfkill-type = <2>;
-                reset-gpio = <&gpio7 8 GPIO_ACTIVE_HIGH>;
-                shutdown-gpio = <&gpio7 9 GPIO_ACTIVE_HIGH>;
-		clocks = <&clk_out_a>;
-	};
diff --git a/net/rfkill/rfkill-gpio.c b/net/rfkill/rfkill-gpio.c
index 67c299e7b916..f5afc9bcdee6 100644
--- a/net/rfkill/rfkill-gpio.c
+++ b/net/rfkill/rfkill-gpio.c
@@ -13,7 +13,6 @@
 #include <linux/slab.h>
 #include <linux/acpi.h>
 #include <linux/gpio/consumer.h>
-#include <linux/of_gpio.h>
 
 struct rfkill_gpio_data {
 	const char		*name;
@@ -72,18 +71,6 @@ static int rfkill_gpio_acpi_probe(struct device *dev,
 	return devm_acpi_dev_add_driver_gpios(dev, acpi_rfkill_default_gpios);
 }
 
-static int rfkill_gpio_dt_probe(struct device *dev,
-				struct rfkill_gpio_data *rfkill)
-{
-	struct device_node * np = dev->of_node;
-
-	rfkill->name = np->name;
-	of_property_read_string(np, "rfkill-name", &rfkill->name);
-	of_property_read_u32(np, "rfkill-type", &rfkill->type);
-
-	return 0;
-}
-
 static int rfkill_gpio_probe(struct platform_device *pdev)
 {
 	struct rfkill_gpio_data *rfkill;
@@ -107,10 +94,6 @@ static int rfkill_gpio_probe(struct platform_device *pdev)
 		ret = rfkill_gpio_acpi_probe(&pdev->dev, rfkill);
 		if (ret)
 			return ret;
-	} else if (&pdev->dev.of_node) {
-		ret = rfkill_gpio_dt_probe(&pdev->dev, rfkill);
-		if (ret)
-			return ret;
 	}
 
 	rfkill->clk = devm_clk_get(&pdev->dev, NULL);
@@ -174,21 +157,12 @@ static const struct acpi_device_id rfkill_acpi_match[] = {
 MODULE_DEVICE_TABLE(acpi, rfkill_acpi_match);
 #endif
 
-#ifdef CONFIG_OF
-static const struct of_device_id rfkill_of_match[] = {
-	{ .compatible = "rfkill-gpio", },
-	{},
-};
-MODULE_DEVICE_TABLE(of, rfkill_of_match);
-#endif
-
 static struct platform_driver rfkill_gpio_driver = {
 	.probe = rfkill_gpio_probe,
 	.remove = rfkill_gpio_remove,
 	.driver = {
 		.name = "rfkill_gpio",
 		.acpi_match_table = ACPI_PTR(rfkill_acpi_match),
-		.of_match_table = of_match_ptr(rfkill_of_match),
 	},
 };
 
-- 
2.35.3

